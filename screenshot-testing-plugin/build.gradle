import org.jetbrains.kotlin.gradle.dsl.KotlinVersion
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
  id("java-gradle-plugin")
  alias(libs.plugins.starter.library.kotlin)
  alias(libs.plugins.gradle.pluginpublish)
  alias(libs.plugins.kotlin.serialization)
  alias(libs.plugins.kotlinx.binarycompatibility)
  id("com.starter.publishing")
}

final GENERATED_PACKAGE_NAME = "io.github.usefulness.testing.screenshot.generated"
final GENERATED_BUILD_DIR = layout.buildDirectory.map { it.dir("generated/config/${GENERATED_PACKAGE_NAME.replace('.', '/')}")}

tasks.register("generateBuildConfig") {
  final pluginVersion = project.version
  final androidTestServicesVersion = libs.androidx.test.services.get().version
  doLast {
    def generatedDir = GENERATED_BUILD_DIR.get().asFile
    generatedDir.deleteDir()
    generatedDir.mkdirs()

    final className = "ScreenshotTestBuildConfig"
    final configClass = new File(generatedDir, "${className}.kt")
    BufferedWriter writer = configClass.newWriter()
    try {
      writer.writeLine("package $GENERATED_PACKAGE_NAME")
      writer.writeLine("")
      writer.writeLine("""
        object $className { 
            const val PLUGIN_VERSION = \"${pluginVersion.toString()}\" 
            const val ANDROID_TEST_SERVICES_VERSION = \"${androidTestServicesVersion}\" 
        }
      """.stripIndent())
      writer.flush()
    } finally {
      writer.close()
    }
  }
}

tasks.withType(KotlinCompile).configureEach {
  compilerOptions {
    apiVersion = KotlinVersion.KOTLIN_1_8
    languageVersion = KotlinVersion.KOTLIN_1_8
  }
}

tasks.named("compileKotlin") {
  dependsOn("generateBuildConfig")
  sourceSets {
    main {
      kotlin.srcDir(GENERATED_BUILD_DIR)
      resources.srcDirs 'src/py'
      resources {
        exclude '**/*.pyc'
        exclude '**/test_*.py'
        exclude '**/fixtures/**'
      }
    }
  }
}

tasks.named('clean') {
  delete GENERATED_BUILD_DIR
}

gradlePlugin {
  website = "https://github.com/usefulness/screenshot-tests-for-android/"
  vcsUrl = "https://github.com/usefulness/screenshot-tests-for-android.git"
  plugins {
    screenshotTesting {
      id = 'io.github.usefulness.screenshot-testing-plugin'
      displayName = 'Screenshot Tests for Android'
      description = "Generate fast deterministic screenshots during Android instrumentation tests. Configuration Cache compatibility included"
      implementationClass = 'io.github.usefulness.testing.screenshot.ScreenshotsPlugin'
      tags.set(["android", "screenshots", "espresso", "screenshot-testing"])
    }
  }
}

dependencies {
  compileOnly(libs.agp.gradle.impl)
  implementation(libs.kotlinx.serialization.json.core)
  implementation(libs.sksamuel.scrimage.core)

  testImplementation(libs.agp.gradle.api)
  testImplementation(gradleTestKit())
  testImplementation(libs.junit.jupiter)
  testImplementation(libs.assertj.core)
}
